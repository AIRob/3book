# -*- coding: utf-8 -*-

import numpy as np
from sklearn.feature_extraction import FeatureHasher

def func1():
    h = FeatureHasher(n_features=3)
    D = [{'dog': 1, 'cat':2, 'elephant':4},{'dog': 2, 'run': 5}]
    f = h.transform(D)
    print(f.toarray())

def rolling_window(a, window):
    shape = a.shape[:-1] + (a.shape[-1] - window + 1, window)
    print("shape:")
    print(shape)
    print("strides:")
    strides = a.strides + (a.strides[-1],)
    print(strides)
    return np.lib.stride_tricks.as_strided(a, shape=shape, strides=strides)


def func2():
    x = np.arange(16)
    print(x)

    blocks = rolling_window(x, 2)[::1, :]
    #print(blocks)
    for block in blocks:
        print(block)
        #c=block>>2
        #c = np.bincount(block >> 2, minlength=16)
        #print(c)
        #wh = np.where(c)[0]
        #print(wh)
        #print(".......")


if __name__ == '__main__':
    func2()